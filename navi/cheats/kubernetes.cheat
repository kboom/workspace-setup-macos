% kubernetes, k8s

# Print autoscaling log
kubectl get hpa.v2beta2.autoscaling -o yaml | bat -l yaml

# Print all pods scheduled on a node in the current namespace
kubectl get pods --all-namespaces -o wide --field-selector spec.nodeName=<node>

# Print 10 most CPU-hungry pods and containers
kubectl top pod --containers | sort --reverse --key 3 --numeric | head -10

# Print 10 most Memory-hungry pods and containers
kubectl top pod --containers | sort --reverse --key 4 --numeric | head -10

# Print most CPU-hungry containers in selected pods
kubectl top pod --containers | grep -E "<pod_pattern>" | sort --reverse --key 4 --numeric

# Watch most CPU-hungry containers in selected pods
watch -n 5 "kubectl top pod --containers | grep -E \"<pod_pattern>\" | sort --reverse --key 4 --numeric"

# Print all contexts
kubectl config get-contexts

# Print current context of kubeconfig
kubectl config current-context

# Set context of kubeconfig
kubectl config use-context <context>

# Print resource documentation
kubectl explain <resource>

# Get nodes (add option '-o wide' for details)
kubectl get nodes

# Get namespaces
kubectl get namespaces

# Get pods from namespace (add option '-o wide' for details)
kubectl get pods -n <namespace>

# Get pods from all namespace (add option '-o wide' for details)
kubectl get pods --all-namespaces

# Get services from namespace
kubectl get services -n <namespace>

# Get details from resource on namespace
kubectl describe <resource>/<name> -n <namespace>

# Print logs from namespace
kubectl logs -f pods/<name> -n <namespace>

# Get deployments
kubectl get deployments -n <namespace>

# Edit deployments
kubectl edit deployment/<name> -n <namespace>

# Drain node in preparation for maintenance
kubectl drain <name>

# Mark node as schedulable
kubectl uncordon <name>

# Mark node as unschedulable
kubectl cordon <name>

# Display resource (cpu/memory/storage) usage
kubectl top <type>

# Delete all pods matching pattern in the current namespace
kubectl get po --no-headers=true | awk '/<pattern>/{print $1}' | xargs kubectl delete po --grace-period=0 --force

# List events in order
kubectl get events --sort-by='{.lastTimestamp}'